# Generated by Django 3.2.5 on 2022-11-22 23:44

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='MyUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='AddressType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('address_type_name', models.CharField(max_length=64)),
                ('description', models.CharField(max_length=1024, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='BusinessStatus',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status_name', models.CharField(max_length=64)),
                ('description', models.CharField(max_length=1024, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='BusinessType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('business_type_name', models.CharField(max_length=64)),
                ('description', models.CharField(max_length=1024, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='BusinessUserRole',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_role_name', models.CharField(max_length=64)),
                ('description', models.CharField(max_length=1024, null=True)),
                ('default_split', models.IntegerField(null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Client',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=64)),
                ('middle_name', models.CharField(max_length=64, null=True)),
                ('last_name', models.CharField(max_length=64)),
                ('birthdate', models.DateField()),
                ('sin', models.CharField(max_length=64)),
                ('created_date', models.DateTimeField()),
                ('modified_date', models.DateTimeField()),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='created_clients', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='ComplianceEntity',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('compliance_entity_name', models.CharField(max_length=64)),
                ('description', models.CharField(max_length=1024, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Country',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('country_name', models.CharField(max_length=64)),
                ('country_code', models.CharField(max_length=64)),
            ],
        ),
        migrations.CreateModel(
            name='EmailType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email_type_name', models.CharField(max_length=64)),
                ('description', models.CharField(max_length=1024, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Gender',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('gender_name', models.CharField(max_length=64)),
                ('gender_code', models.CharField(max_length=64)),
                ('description', models.CharField(max_length=1024, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='InsuranceApplication',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('face_amount', models.FloatField(null=True)),
                ('planned_premium', models.FloatField(null=True)),
            ],
        ),
        migrations.CreateModel(
            name='InsurancePlan',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('insurance_plan_name', models.CharField(max_length=64)),
                ('insurance_plan_code', models.CharField(max_length=64, null=True)),
                ('description', models.CharField(max_length=1024, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='InsurancePlanType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('insurnace_plan_type_name', models.CharField(max_length=64)),
                ('insurance_plan_type_code', models.CharField(max_length=64, null=True)),
                ('description', models.CharField(max_length=1024, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='InsuranceProvider',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('insurance_provider_name', models.CharField(max_length=64)),
                ('description', models.CharField(max_length=1024, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Medical',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('medical_name', models.CharField(max_length=64)),
                ('description', models.CharField(max_length=1024, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='PhoneType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('phone_type_name', models.CharField(max_length=64)),
                ('description', models.CharField(max_length=1024, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='ProductType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('product_type_name', models.CharField(max_length=64)),
                ('description', models.CharField(max_length=1024, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='ProvinceState',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('province_state_name', models.CharField(max_length=64)),
                ('province_state_code', models.CharField(max_length=64)),
                ('country', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='provinces_states', to='mybusiness.country')),
            ],
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('product_name', models.CharField(max_length=64)),
                ('description', models.CharField(max_length=1024, null=True)),
                ('product_type', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='products', to='mybusiness.producttype')),
            ],
        ),
        migrations.CreateModel(
            name='Phone',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('area_code', models.CharField(max_length=64)),
                ('phone_number', models.CharField(max_length=64)),
                ('is_primary', models.BooleanField()),
                ('is_active', models.BooleanField()),
                ('is_archived', models.BooleanField()),
                ('notes', models.CharField(max_length=1024, null=True)),
                ('client', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='phones', to='mybusiness.client')),
                ('phone_type', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='phones', to='mybusiness.phonetype')),
            ],
        ),
        migrations.CreateModel(
            name='MyBusiness',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('projected_FYC', models.FloatField(null=True)),
                ('application_date', models.DateField(null=True)),
                ('application_location', models.CharField(max_length=64, null=True)),
                ('created_date', models.DateTimeField()),
                ('modified_date', models.DateTimeField()),
                ('business_type', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, related_name='mybusinesses', to='mybusiness.businesstype')),
                ('client', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='businesses', to='mybusiness.client')),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='created_businesses', to=settings.AUTH_USER_MODEL)),
                ('product', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, related_name='mybusinesses', to='mybusiness.product')),
                ('status', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='mybusinesses', to='mybusiness.businessstatus')),
            ],
        ),
        migrations.CreateModel(
            name='InsuranceApplication_Medical',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('insurance_application', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='insurance_applications', to='mybusiness.insuranceapplication')),
                ('medical', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='insurance_applications', to='mybusiness.medical')),
            ],
        ),
        migrations.AddField(
            model_name='insuranceapplication',
            name='businesss',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='insurance_application', to='mybusiness.mybusiness'),
        ),
        migrations.AddField(
            model_name='insuranceapplication',
            name='plan',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='insurance_applications', to='mybusiness.insuranceplan'),
        ),
        migrations.AddField(
            model_name='insuranceapplication',
            name='plan_type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='insurance_applications', to='mybusiness.insuranceplantype'),
        ),
        migrations.AddField(
            model_name='insuranceapplication',
            name='product',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='insurance_applications', to='mybusiness.product'),
        ),
        migrations.AddField(
            model_name='insuranceapplication',
            name='provider',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='insurance_applications', to='mybusiness.insuranceprovider'),
        ),
        migrations.CreateModel(
            name='Email',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email', models.CharField(max_length=1024)),
                ('is_active', models.BooleanField()),
                ('is_primary', models.BooleanField()),
                ('notes', models.CharField(max_length=1024, null=True)),
                ('client', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='emails', to='mybusiness.client')),
                ('email_type', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='emails', to='mybusiness.emailtype')),
            ],
        ),
        migrations.CreateModel(
            name='Document',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('document_name', models.CharField(max_length=64)),
                ('description', models.CharField(max_length=1024, null=True)),
                ('client', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='document', to='mybusiness.client')),
            ],
        ),
        migrations.AddField(
            model_name='client',
            name='gender',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='clients', to='mybusiness.gender'),
        ),
        migrations.CreateModel(
            name='Business_User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('split', models.IntegerField(null=True)),
                ('notes', models.CharField(max_length=1024, null=True)),
                ('created_date', models.DateTimeField()),
                ('modified_date', models.DateTimeField()),
                ('business', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='users', to='mybusiness.mybusiness')),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='created_businessusers', to=settings.AUTH_USER_MODEL)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='businesses', to=settings.AUTH_USER_MODEL)),
                ('user_role', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='businessusers', to='mybusiness.businessuserrole')),
            ],
        ),
        migrations.CreateModel(
            name='Business_Document',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_submitted', models.BooleanField()),
                ('url', models.CharField(max_length=1024)),
                ('business', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='documents', to='mybusiness.mybusiness')),
                ('document', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='mybusinesses', to='mybusiness.document')),
            ],
        ),
        migrations.CreateModel(
            name='Business_ComplianceEntity',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('notes', models.CharField(max_length=1024, null=True)),
                ('businesses', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='mybusiness.complianceentity')),
                ('complianceentities', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='mybusiness.mybusiness')),
            ],
        ),
        migrations.CreateModel(
            name='Address',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('stree_address', models.CharField(max_length=1024)),
                ('city', models.CharField(max_length=64)),
                ('postal_code', models.CharField(max_length=64)),
                ('address_type', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='addresses', to='mybusiness.addresstype')),
                ('client', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='mybusiness.client')),
                ('country', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='addressess', to='mybusiness.country')),
                ('province_state', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='addresses', to='mybusiness.provincestate')),
            ],
        ),
        migrations.CreateModel(
            name='ActivityLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('event_datetime', models.DateTimeField()),
                ('model_name', models.CharField(max_length=64, null=True)),
                ('field_name', models.CharField(max_length=64, null=True)),
                ('value', models.CharField(max_length=1024, null=True)),
                ('notes', models.CharField(max_length=1024, null=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='activities', to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
